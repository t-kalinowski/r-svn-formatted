R 0.99.0 for Windows 9x and NT
==============================

This distribution contains a binary distribution of R-0.99.0 to run on
Windows 95, 98 and NT4 on Intel/clone chips. It is designed to
be as close as possible to the implementation on Unix, but see the
list of differences below. The port was by Guido Masarotto with
many important contributions by Brian Ripley.

See CHANGES for the new features of this version.


Installation
============

The distribution consists of several zip files:

rw0990b1.zip and rw0990b2.zip		the base system
rw0990h.zip				text help
rw0990ch.zip				compiled HTML help
rw0990w.zip				HTML help files
rw0990l.zip				latex help for offline help
rw0990d.zip				PDF manuals
rw0990sp.zip				files to install source packages

and optionally the installer rwinst.exe.

The simplest way to install is to run the installer (double-click on
the icon for rwinst.exe and navigate its wizard-like pages).

To install manually, unpack rw0990b1.zip and rw0990b2.zip anywhere you
like. It will unpack to a directory tree under rw0990. The help,
compiled HTML, HTML and latex help files are in separate files
rw0990h.zip, rw0990ch.zip rw0990w.zip and rw0990l.zip which should be
unpacked in the same directory you unpacked rw0990b1.zip.  File
rw0990d.zip contains PDF versions of the (draft) manuals for R, which
unpack into rw0990/doc/manual.

You should install either the text or compiled HTML help.


Usage
=====

There are two executables in rw0990\bin:

GUI:

Rgui.exe runs as a standard Windows GUI executable and provides an R
console in its own window. It takes the standard R command-line
arguments; these are most easily set by making a shortcut to
...\rw0990\bin\rgui.exe and adding the arguments in the Target field.
Set the `Start in' field of the shortcut to the directory you want to use
as the working directory (where workspaces and files are saved and
loaded from).

Command-line editing is available: see Help | Console for details.

The menus provide shortcuts to some R commands such as help, help.start,
apropos, ls, load, save.image, search.

The `load' menu items (Source R code, Load image) keep track of the
directory that was last used, and start their dialog boxes from that
directory the next time they are used. That directory can be made the
working directory by the File | Change dir menu item.  All the `save'
menu items start dialog boxes at the current working directory: this
includes Save image and the various ways to save graphics, as well as
saving the workspace at the end of the session.

Observe that the help files use the latin1 encoding. To see all the
characters you must use an appropriate font (European-language True
Type fonts should be OK). To check if your preferred font has latin1
capability, try "help(text)" and look at the examples.  [Note: only a
couple of files make use of latin1 characters not contained in the
standard ASCII set so if you like a font without latin1 capability,
use it.]


TERMINAL/BATCH:

Rterm.exe will run from a command line such as an MS-DOS or Commands
Window running the standard shells, command.com (9x) and cmd.exe (NT),
as well as the ports of bash and tcsh that we use.  Its primary
purpose is to allow batch operation, but it does provide all the
facilities needed for interactive use, including simple command-line
editing.

Batch use: At it simplest, Rterm.exe can be used in a batch mode by
commands like

Rterm.exe --vsize=10M --nsize=400k --no-restore --no-save < infile > outfile

although users will probably want to set up simple .bat or .cmd files
to run batch jobs.


Use with ESS: You can use Rterm.exe to provide inferior R-mode in
ESS under NTEmacs, for example ess-5.1.11.  The pager is automatically
set to "console" so help will be displayed in emacs buffers.


GRAPHICS:

The screen device is called windows(). This is launched automatically,
and can also be launched explicitly by windows() or win.graph() (or
x11()) from both Rgui.exe and Rterm.exe.  A printer device can be
opened using win.print(), and graphs drawn as metafiles by
win.metafile().

The graphics device pops up a separate window which has two menus. The
device's File menu allows saving or printing or to run dev.off().

The History menu allows the recording of plots. When plots have been
recorded they can be reviewed by PgUp and PgDn, saved and replaced.
Recording can be turned on automatically (the Recording item on the
list) or individual plots can be added (Add or the INS key).
The whole plot history can be saved to or retrieved from an R variable
in the global environment.

There is only one graphics history shared by all the windows devices.

HELP:

There are several options for help, depending on which help files you
installed.

(i) Text help. This is the default, and the fallback option.
It will display in the currently set pager (use options(pager=) to change).

(ii) Compiled HTML files. Set this as the default by
options(chmhelp=T) or for individual help items by help(topic,
chmhelp=T).  Full text search is available from the Search tab.  To
make use of this you will need a recent version of Windows or IE4 or
later installed, or use the updater hhupd.exe on CRAN at 
bin/windows/windows-NT/etc.

(iii) Windows .hlp files. Set this as the default by
options(winhelp=T) or for individual help items by help(topic,
winhelp=T).  Full text search is available from the Search tab. The
conversion to this format is a little rough, and tables may be
incomplete.

(iv) HTML help to be displayed in your normal browser.  Set this as
the default by options(htmlhelp=T) or for individual help items by
help(topic, htmlhelp=T).  Using help.start() sets the browser to the 
top-level page, from which you can access a search engine.

(v) Latex help files are available for use with help(topic, offline=T).
You will need to customize the file rw0990\bin\helpPRINT.bat: it
contains instructions.



Customization
=============

Environment variables can be set as NAME=value on the command line,
including in a short-cut.  They can also be set (as NAME=value lines)
in the file .Renviron, or if that does not exist HOME\.Renviron.

Many aspects of the console (size, appearance, font, colours) can be
customized by editing the file etc\Rconsole, and a copy with a user's
settings can be put in her HOME directory or in the working
directory. (The exact sequence is to search the directory pointed to
by the first found of the environment variables R_USER then HOME then
{HOMEDRIVE}{HOMEPATH} then the working directory, finally R_HOME\etc.
This applies to .Renviron and other uses of `HOME' in our documentation.)
The file contains a description of the settings that can be
altered. See also ?Rconsole.

The mapping between Windows fonts and R font's number can be set by
editing the file etc\Rdevga, and a copy with a user's settings can be
put in the HOME or working directory (see the description of
Rconsole). This mapping applies to both the screen device and the
printer device.

Many R defaults can be set in the file R_HOME\etc\Rprofile or a user's
file .Rprofile. In particular:

- The pager is set by options(pager=). The default is "internal" which
  brings up a separate console-like window. The internal pager can use
  a single window or a different window for each topic shown
  (configurable in etc\Rconsole). Other possibilities we have
  used are "notepad" and "pfe32 /v", and "console" to list the files in
  the console (rgui.exe) or terminal window (rterm.exe).


Adding packages
===============

Binaries for many packages are available at
CRAN/bin/windows/windows-NT/contrib. These are zip files which should
be unpacked in rw0990\library. They are then available for use. You
can also use the installer rwinst.exe to selectively unpack the zip
files.

The list of packages and functions given by HTML help and used by the
search engine can be updated from a running R process by the command

	link.html.help()

provided the owner of the process has write permission on
rw0990\doc\html.  If you have the source-package files and Perl
installed you can use

	cd ...\rw0990\src\gnuwin32\help
	make indices

Private libraries of packages can be used and can be specified by the
environment variable R_LIBS. (Separate directories by ";" in this
version.)  They will not be linked to HTML help.  In more detail, to
use packages installed in directory R:\libraries\gm, set

R_LIBS=R:\libraries\gm

in the environment or on the command line, or add the line

.lib.loc <- c("R:/libraries/gm", .lib.loc)

to your .Rprofile or at the end of R_HOME\etc\Rprofile.

To install a package from source code you need the source-package
distribution rw0990sp.zip installed (but not the R source). This contains
detailed instructions.


Differences from Unix
=====================

- R can be interrupted by Esc in Rgui and by Ctrl-C or Ctrl-Break in Rterm:
  Ctrl-C is used for copying in the GUI version. C-c C-c works
  under NTemacs.

- Command-line editing is always available, but is much simpler than
  under readline-based input on Unix.

- The commands history is saved between sessions only by Rgui: it is 
  always saved even if the workspace is not saved.

- The HTML function and package lists and search datasbase are not
  re-generated automatically by html.start(). Use link.html.help().

- Paths to files can be specified with "/" or "\\".

- Using help.start() does not automatically send help requests to the
  browser: use options(htmlhelp=T) to turn this on.

- Graphics save and replay only here.

- system() is enhanced here and does not automatically use a shell.
  See its help page and that of shell().

- graphics devices png(), jpeg() and bmp() are available in this version.


Building From Source
====================

See the file INSTALL in the source distribution and the rw-FAQ.


Feedback
========

Please send comments and bug reports to (preferably both of)

    Guido Masarotto <guido@hal.stat.unipd.it>
    Brian Ripley <ripley@stats.ox.ac.uk>
