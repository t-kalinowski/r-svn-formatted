#
# ${R_HOME}/src/library/Recommended/Makefile

VPATH = @srcdir@
srcdir = @srcdir@
top_srcdir = @top_srcdir@

top_builddir = ../../..
subdir = src/library/Recommended

include $(top_builddir)/Makeconf

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
DISTFILES = Makefile.in 
R = $(top_builddir)/bin/R

# This should probably get configure'd into Makeconf instead
# It can point to a local mirror if there's no direct CRAN connection
CRANREC = cran.r-project.org::CRAN/src/contrib/$(VERSION)/Recommended/

CLEANFILES = $(EXPORTFILE)
DISTCLEANFILES = Makefile

all: Makefile Timestamp
	find . -name '*.tar.gz' -newer Timestamp -exec $(R) CMD INSTALL {} \;
	touch Timestamp

.SUFFIXES:
.SUFFIXES: .in

.in:
	@cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
	@(for f in $(OBJECTS); do \
	    echo "$${f}: $(srcdir)/$${f}.in"; \
	  done) >> $@

Timestamp:
	touch $@
	sleep 1
	if [ $(BUILDDIR_IS_SRCDIR) = no ] ; then \
		find $(srcdir) -name '*.tar.gz' -exec cp {} . \; ;\
	fi
	find . -name '*.tar.gz' -exec touch {} . \; 

R: $(OBJECTS)
$(OBJECTS): $(top_builddir)/config.status

# Notice that if we can't use -t on rsync because that defeats the
# purpose of the Timestamp... The -c (checksum first) is also necessary
# because otherwise all the files get the mtime changed. Sigh.
rsync-update: Timestamp
	rsync -rcIz --delete --exclude=Makefile \
               --exclude=Makefile.in --exclude=Timestamp $(CRANREC) .

install: installdirs
installdirs:
install-strip: install

uninstall:

mostlyclean: clean
clean:
	-@test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
	@test $(BUILDDIR_IS_SRCDIR) = yes || \
		rm -f *.tar.gz \; 
distclean: clean
	-@test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
	-@rm -f *.tar.gz
maintainer-clean: distclean

distdir: $(DISTFILES) rsync-update
	@for f in $(DISTFILES); do \
	  test -f $(distdir)/$${f} \
	    || ln $(srcdir)/$${f} $(distdir)/$${f} 2>/dev/null \
	    || cp -p $(srcdir)/$${f} $(distdir)/$${f}; \
	done
	@for f in *.tar.gz; do \
	  test -f $(distdir)/$${f} \
	    || ln $${f} $(distdir)/$${f} 2>/dev/null \
	    || cp -p $${f} $(distdir)/$${f}; \
	done

## Automagically generated dependencies:

