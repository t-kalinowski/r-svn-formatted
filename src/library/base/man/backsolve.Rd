\name{backsolve}
\title{Solve an Upper or Lower Triangular System}
\usage{
backsolve(r, x, k=ncol(r), upper.tri = TRUE, transpose = FALSE)
}
\alias{backsolve}
\arguments{
    % Name 'r' is not really make sense for upper.tri = FALSE
    % Name 'x' is also a  misnomer,  should rather be  'b'. -- is this S ??
\item{r}{an upper (or lower) triangular matrix giving the coefficients for
the system to be solved.  Values below (above) the diagonal are ignored.}
\item{x}{a matrix whose columns give ``right-hand sides'' for the equations.}
\item{k}{The number of columns of \code{r} and rows of \code{x} to use.}
\item{upper.tri}{logical; if \code{TRUE} (default), the \emph{upper}
    \emph{tri}angular part of \code{r} is used.  Otherwise, the lower one.}
\item{transpose}{logical; if \code{TRUE}, solve \eqn{r' * y = x} for
    \eqn{y}, i.e., \code{t(r) \%*\% y == x}.
}
\value{
The solution of the triangular system.  The result will be a
a vector if \code{x} is a vector and a matrix if \code{x} is a matrix.
}
\references{
Dongarra, J. J., J. R. Bunch, C. B. Moler and G. W. Stewart (1978).
\emph{LINPACK Users Guide}.  Philadelphia: SIAM Publications.
}
\seealso{
\code{\link{chol}},
\code{\link{qr}},
\code{\link{solve}}.
}
\examples{
## upper triangular matrix 'r':
r <- rbind(c(1,2,3),
           c(0,1,1),
           c(0,0,2))
( y <- backsolve(r, x <- c(8,4,2)) ) # -1 3 1
r \%*\% y # == x = (8,4,2)
c( y2 <- backsolve(r, x, transpose = TRUE)) # 8 -12 -5
all(t(r) \%*\% y2 == x)# exactly on Linux (Pentium)
all(y  == backsolve(t(r), x, upper = FALSE, transpose = TRUE))
all(y2 == backsolve(t(r), x, upper = FALSE,  transpose = FALSE))
}
\keyword{algebra}
\keyword{array}
