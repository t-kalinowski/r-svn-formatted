###-*- R -*- Macintosh Specific ----

.Library <- paste(R.home(), "library", sep=.Platform$file.sep)
.lib.loc <- .Library
options(papersize = "a4")
options(device="macintosh")
options(editor="macintosh")
options(pager="macintosh")
options(unzip="mac.unzip")
options(mailer="none")
#options(graphics.record=FALSE)

macintosh <- function(display = "", width = 5, height = 5, pointsize = 12)
    .Internal(Macintosh(display, width, height, pointsize))

help.start <- function(gui = "irrelevant", browser = "irrelevant")
{
    a <- system.file("rmac.html", pkg="doc:html", lib=R.home())
    if (a == "")
        stop("I can't find the html help")
    else {
        cat("If nothing happens, you have to open `", a, "' yourself\n")
        .Internal(help.start());
    }
    invisible("")
}


zip.file.extract <- function(file, zipname="R.zip")
{
    if(file.exists(file)) return(file)  # if the file exists, do not
                                        # replace it

    ofile <- gsub("::::", ":", file)
    path <- sub("[^:]*$","", ofile)  # changed "/" in ":"
    topic <- substr(ofile, nchar(path)+1, 1000)

    if(file.exists(file.path(path, zipname,fsep=""))) {

        tempdir <- sub("[^:]*$","", tempfile())
        if((unzip <- getOption("unzip")) != "mac.unzip") {
            if(!system(paste(unzip, ' -oq "',
                             file.path(path, zipname), '" ', topic,
                             " -d ", tempdir, sep=""), invisible = TRUE))
                file <- paste(tempdir,  topic, sep="")
        }
        else  {    # mac.unzip
            rc <- .Internal(int.unzip(file.path(path, zipname, fsep=""),
                                      topic, path))
            if (rc != 0) warning("Error in MacUnZip")
        }
    }
    file
}

demo <- function(topic, device = getOption("device")) {
    if (is.character(device)) device <- get(device)
    Topics <-cbind(graphics	= c("graphics", "graphics.R",	"G"),
		   image	= c("graphics", "image.R",	"G"),
		   lm.glm	= c("models",	"lm+glm.R",	"G"),
		   glm.vr	= c("models",	"glm-v+r.R",	""),
		   nlm		= c("nlm",	"valley.R",	""),
		   recursion	= c("language", "recursion.R",	"G"),
		   scoping	= c("language", "scoping.R",	""),
		   is.things	= c("language", "is-things.R",	"")
		   )
    dimnames(Topics)[[1]] <- c("dir", "file", "flag")
    topic.names <- dimnames(Topics)[[2]]
    demo.help <- function() {
	cat("Use `demo(topic)' where choices for argument `topic' are:\n")
	cbind(topics = topic.names)
    }
    if(missing(topic)) return(demo.help())
    topic <- substitute(topic)
    if (!is.character(topic)) topic <- deparse(topic)[1]
    i.top <- pmatch(topic, topic.names)
    if (is.na(i.top) || i.top == 0) {
	cat("unimplemented `topic' in demo.\n")
	print(demo.help())
	stop()
    } else {
	topic <- topic.names[i.top]
	cat("\n\n\tdemo(",topic,")\n\t---- ",rep("~",nchar(topic)),
	    "\n\nType  <Return>	 to start : ",sep="")
	readline()
	if(dev.cur()<=1 && Topics["flag",i.top] == "G")
	    device()
	source(file.path(R.home(),
                         "demos",
                         Topics["dir",  i.top],
                         Topics["file", i.top]),
	       echo = TRUE, max.deparse.length=250)
    }
}



MacRoman <- 0:255

ISOLatin1 <- as.integer(c(0:126, 32, 32, 32, 32, 32, 32, 32, 32, 32,
32, 32, 32, 32, 32, 32, 32, 32, 245, 96, 171, 246, 247, 248, 249, 250,
172, 32, 251, 252, 32, 253, 254, 255, 32, 193, 162, 163, 32, 180, 32,
164, 172, 169, 187, 199, 194, 45, 168, 248, 161, 177, 32, 32, 171,
181, 166, 225, 252, 32, 188, 200, 32, 32, 32, 192, 203, 231, 229, 204,
128, 129, 174, 130, 233, 131, 230, 232, 32, 32, 32, 32, 32, 132, 241,
238, 239, 205, 133, 32, 175, 244, 242, 243, 134, 32, 32, 167, 136,
135, 137, 139, 138, 140, 190, 141, 143, 142, 144, 145, 147, 146, 148,
149, 32, 150, 152, 151, 153, 155, 154, 214, 191, 157, 156, 158, 159,
32, 32, 216))

WinAnsi <- as.integer(c(0:126, 32, 219, 32, 226, 196, 227, 201, 160,
224, 246, 228, 32, 220, 206, 32, 32, 32, 32, 212, 39, 210, 211, 165,
208, 209, 247, 170, 32, 221, 207, 32, 32, 217, 32, 193, 162, 163, 32,
180, 32, 164, 172, 169, 187, 199, 194, 45, 168, 248, 161, 177, 32, 32,
171, 181, 166, 225, 252, 32, 188, 200, 32, 32, 32, 192, 203, 231, 229,
204, 128, 129, 174, 130, 233, 131, 230, 232, 32, 32, 32, 32, 32, 132,
241, 238, 239, 205, 133, 32, 175, 244, 242, 243, 134, 32, 32, 167,
136, 135, 137, 139, 138, 140, 190, 141, 143, 142, 144, 145, 147, 146,
148, 149, 32, 150, 152, 151, 153, 155, 154, 214, 191, 157, 156, 158,
159, 32, 32, 216))
