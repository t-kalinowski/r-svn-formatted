useDynLib(ts)

export(acf, acf2AR, ar, ar.burg, ar.burg.default, ar.burg.mts,
       ar.mle, ar.ols, ar.yw, ar.yw.default, ar.yw.mts, arima, arima.sim,
       arima0, arima0.diag, ARMAacf, ARMAtoMA, bandwidth.kernel, Box.test,
       ccf, cpgram, decompose, df.kernel, diffinv,
       diffinv.default, diffinv.ts, diffinv.vector, embed, filter,
       HoltWinters, is.tskernel, KalmanForecast, KalmanLike, KalmanRun,
       KalmanSmooth, kernapply, kernapply.default, kernapply.ts,
       kernapply.tskernel, kernapply.vector, kernel, lag, lag.default,
       lag.plot, makeARIMA, monthplot, monthplot.default,
       monthplot.stl, monthplot.StructTS, monthplot.ts, na.contiguous, pacf,
       pacf.default, pacf.mts, plot.acf, plot.HoltWinters,
       plot.spec, plot.spec.coherency, plot.spec.phase, plot.stl,
       PP.test, predict.ar, predict.Arima, predict.arima0,predict.HoltWinters, spec.ar,
       spec.pgram, spec.taper, spectrum, stl, StructTS,
       toeplitz, ts.intersect, ts.plot, ts.union, tsdiag, tsdiag.Arima,
       tsdiag.arima0, tsdiag.StructTS, tsSmooth, tsSmooth.StructTS)

S3method("[", tskernel)
S3method(coef, Arima)
S3method(logLik, Arima)
S3method(plot, decomposed.ts)
S3method(plot, HoltWinters)
S3method(plot, spec)
S3method(plot, stl)
S3method(plot, tskernel)
S3method(predict, ar)
S3method(predict, Arima)
S3method(predict, arima0)
S3method(predict, HoltWinters)
S3method(predict, StructTS)
S3method(print, ar)
S3method(print, Arima)
S3method(print, arima0)
S3method(print, HoltWinters)
S3method(print, stl)
S3method(print, StructTS)
S3method(print, tskernel)
S3method(residuals, HoltWinters)
S3method(summary, stl)
S3method(vcov, Arima)
