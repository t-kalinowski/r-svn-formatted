#
# ${R_HOME}/src/main/Makefile

VPATH = @srcdir@
srcdir = @srcdir@
top_srcdir = @top_srcdir@

top_builddir = ../..
subdir = src/main

include $(top_builddir)/Makeconf

SOURCES_C = \
	CConverters.c \
	Rdynload.c RNG.c \
	apply.c arithmetic.c apse.c array.c attrib.c \
	base.c bind.c builtin.c \
	character.c coerce.c colors.c complex.c connections.c context.c \
	cov.c cum.c \
	dcf.c datetime.c debug.c devPS.c devPicTeX.c deparse.c deriv.c \
	devices.c dotcode.c dounzip.c dstruct.c duplicate.c \
	engine.c envir.c errors.c eval.c \
	format.c fourier.c \
	gram.c gram-ex.c graphics.c \
	identical.c internet.c iosupport.c \
	lapack.c list.c logic.c \
	main.c mapply.c match.c memory.c model.c \
	names.c \
	objects.c optim.c optimize.c options.c \
	par.c paste.c pcre.c platform.c \
	plot.c plot3d.c plotmath.c \
	print.c printarray.c printvector.c printutils.c qsort.c \
	random.c regex.c registration.c relop.c \
	saveload.c scan.c seq.c serialize.c size.c sort.c source.c split.c \
	sprintf.c subassign.c subscript.c subset.c summary.c \
	unique.c util.c \
	version.c vfonts.c
SOURCES_F = \
	xxxpr.f
EXTRA_SOURCES_C = \
	alloca.c acosh.c asinh.c atanh.c \
	snprintf.c strdup.c strncasecmp.c \
	vsnprintf.c
DEPENDS = $(SOURCES_C:.c=.d) $(EXTRA_SOURCES_C:.c=.d)
SOURCES = $(SOURCES_C) $(SOURCES_F)
OBJECTS = $(SOURCES_C:.c=.o) $(SOURCES_F:.f=.o)
HEADERS = \
	RBufferUtils.h Rregex.h Rstrptime.h \
	arithmetic.h apse.h \
	basedecl.h \
	par-common.c \
	qsort-body.c \
	unzip.h

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
DISTFILES = Makefile.in Makefile.win \
	$(HEADERS) \
	$(SOURCES_C) \
	$(EXTRA_SOURCES_C) \
	$(SOURCES_F) \
	gram.y

ZLIB_CPPFLAGS = @BUILD_ZLIB_TRUE@ -I$(top_srcdir)/src/extra/zlib
BZLIB_CPPFLAGS = @BUILD_BZLIB_TRUE@ -I$(top_srcdir)/src/extra/bzip2
PCRE_CPPFLAGS = @BUILD_PCRE_TRUE@ -I$(top_srcdir)/src/extra/pcre

ALL_CPPFLAGS = $(ZLIB_CPPFLAGS) $(BZLIB_CPPFLAGS) $(PCRE_CPPFLAGS) \
  $(R_XTRA_CPPFLAGS) $(CPPFLAGS) $(DEFS)

noinst_LIBRARIES = libmain.a
@WANT_R_SHLIB_FALSE@libmain_a_OBJECTS = $(OBJECTS)
@WANT_R_SHLIB_TRUE@libmain_a_OBJECTS = $(OBJECTS:.o=.lo)

all: Makefile Makedeps R

Makefile: $(srcdir)/Makefile.in \
  $(top_builddir)/config.status \
  ../include/config.h \
  ../include/Rversion.h \
  $(SOURCES_C)
	@cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

Makedeps: Makefile $(DEPENDS)
	@cat $(DEPENDS) >> Makefile
	@touch $@

R: Makefile
	@$(MAKE) Makedeps
	@$(MAKE) $(noinst_LIBRARIES)


libmain.a: $(libmain_a_OBJECTS)
	rm -rf $@
	$(AR) cr $@ $(libmain_a_OBJECTS)
	$(RANLIB) $@

../include/config.h ../include/Rversion.h:
	(cd $(@D); $(MAKE) $(@F))

$(srcdir)/gram.c: @MAINTAINER_MODE_TRUE@ $(srcdir)/gram.y
	@echo "re-making gram.c"
	$(YACC) $(YFLAGS) $(srcdir)/gram.y
	$(SHELL) $(top_srcdir)/tools/move-if-change y.tab.c $(srcdir)/gram.c

mostlyclean: clean
clean:
	@-rm -rf .libs _libs
	@-rm -f Makedeps *.d *.o *.lo *.a *.la
distclean: clean
	@-rm -f Makefile
maintainer-clean: distclean
	@echo "This command is intended for maintainers to use; it"
	@echo "deletes files that may need special rules to rebuild"
	@-rm -f $(srcdir)/gram.c

tags: TAGS
TAGS: $(SOURCES) $(EXTRA_SOURCES_C) $(HEADERS)
	etags $(SOURCES) $(EXTRA_SOURCES_C) $(HEADERS)

## Unused targets
install install-strip uninstall info dvi check:

distdir: $(DISTFILES)
	@for f in $(DISTFILES); do \
	  test -f $(distdir)/$${f} \
	    || ln $(srcdir)/$${f} $(distdir)/$${f} 2>/dev/null \
	    || cp -p $(srcdir)/$${f} $(distdir)/$${f}; \
	done

## Automagically generated dependencies:

