#!/bin/sh
#
# ${R_HOME}/bin/SHLIB

# @configure_input@

revision='$Revision: 1.19 $'
version=`set - ${revision}; echo ${2}`
version="R shared library builder ${version}

Copyright (C) 2000 The R Core Development Team.
This is free software; see the GNU General Public Licence version 2
or later for copying conditions.  There is NO warranty."

usage="Usage: R CMD SHLIB [options] files

Build a shared library for dynamic loading from the specified source or
object files (which are automagically made from their sources).  If not
given via \`--output', the name for the library is determined from the
first file.

Options:
  -h, --help		print short help message and exit
  -v, --version		print version info and exit
  -o, --output=LIB	use LIB as (full) name for the built library

Report bugs to <r-bugs@r-project.org>."

objs=
shlib=
MAKE=${MAKE-@MAKE@}
makefiles="-f ${R_HOME}/etc/Makeconf"
with_cxx=false
with_f77=false

while test -n "${1}"; do
  case ${1} in
    -h|--help)
       echo "${usage}"; exit 0 ;;
    -v|--version)
       echo "${version}"; exit 0 ;;
    -o)
      shlib=${2}; shift ;;
    --output=*)
      shlib=`echo "${1}" | sed -e 's/[^=]*=//'` ;;
    *.cc|*.cpp|.*C)
      with_cxx=true
      if test -z "${shlib}"; then
	shlib="`echo ${1} | sed 's/\.[^\.][^\.]*$/.@SHLIB_EXT@/'`"
      fi
      objs="${objs} `echo ${1} | sed 's/\.[^\.][^\.]*$/.o/'`"
      ;;
    *.f)
      with_f77=true
      if test -z "${shlib}"; then
	shlib="`echo ${1} | sed 's/\.[^\.][^\.]*$/.@SHLIB_EXT@/'`"
      fi
      objs="${objs} `echo ${1} | sed 's/\.[^\.][^\.]*$/.o/'`"
      ;;
    *.[co])
      if test -z "${shlib}"; then
	shlib="`echo ${1} | sed 's/\.[^\.][^\.]*$/.@SHLIB_EXT@/'`"
      fi
      objs="${objs} `echo ${1} | sed 's/\.[^\.][^\.]*$/.o/'`"
      ;;
  esac
  shift
done

makeobjs="OBJS=\"${objs}\""
if test -r Makevars; then
  makefiles="-f Makevars ${makefiles}"
  if grep '^ *OBJS *=' Makevars >/dev/null; then
    makeobjs=
  fi
fi

makeargs="SHLIB=\"${shlib}\""
if ${with_cxx}; then
  makeargs="SHLIB_LDFLAGS='\$(SHLIB_CXXLDFLAGS)' ${makeargs}"
  makeargs="SHLIB_LD='\$(SHLIB_CXXLD)' ${makeargs}"
fi
if ${with_f77}; then
  makeargs="${makeargs} SHLIB_LIBADD='\$(FLIBS)'"
fi

eval ${MAKE} ${makefiles} ${makeargs} ${makeobjs}

### Local Variables: ***
### mode: sh ***
### sh-indentation: 2 ***
### End: ***
